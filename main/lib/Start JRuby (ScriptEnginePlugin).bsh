// Startup script that causes jEdit to load the JRuby interpreter on startup, as long as ScriptEnginePlugin is enabled

// Set JRuby to Ruby 1.9-compatible mode
System.setProperty("jruby.compat.version", org.jruby.CompatVersion.RUBY1_9.toString());

// Reimplementation of MacroDelegate#executeMacro -- doesn't depend on a View
// or a macro path
import javax.script.ScriptContext;
import javax.script.ScriptEngine;
import javax.script.SimpleScriptContext;

import com.townsfolkdesigns.jedit.plugins.scripting.ScriptEngineDelegate;

public void executeDummyMacro(String modeStr) {
  Mode mode = jEdit.getMode(modeStr);
     ScriptEngine engine = new ScriptEngineDelegate().getScriptEngineForMode(mode);
     ScriptContext scriptContext = new SimpleScriptContext();
     engine.setContext(scriptContext);

    Log.log(Log.DEBUG, this, "In startup script " + scriptPath + ": attempting to evaluate empty dummy script");
    engine.eval("");
}

// Main code
try {
    executeDummyMacro("ruby"); // use our implementation
} catch(Exception e) {
    Log.log(Log.ERROR, this, "In startup script " + scriptPath + ", caught exception while attempting to evaluate empty dummy script:", e);
    stackTrace = e.toString() + "\n";
    for(el : e.getStackTrace()) {
        stackTrace += " at " + el + "\n";
    }
    // TODO: How to display error like a normal jEdit error?
    // ErrorsWidgetFactory.getWidget requires a view, which unfortunately we
    // don't have yet.
    Macros.message(null, "In startup script " + scriptPath + ", caught exception while attempting to evaluate empty dummy script:\n" + stackTrace);
}
